#include <iostream>
#include <vector>
#include <fstream>
#include <string>
using namespace std;

// Клас за представяне на книга
class Книга {
public:
    string заглавие;
    string автор;
    int година;

    Книга(string z, string a, int g) : заглавие(z), автор(a), година(g) {}

    void покажиИнформация() const{
        cout << "Заглавие: " << заглавие << ", Автор: " << автор << ", Година: " << година << endl;
    }
};

// Функции за работа с библиотеката
void добавиКнига(vector<Книга>& библиотека) {
    string заглавие, автор;
    int година;
    cout << "Въведете заглавие: ";
    getline(cin, заглавие);
    cout << "Въведете автор: ";
    getline(cin, автор);
    cout << "Въведете година на издаване: ";
    cin >> година;
    cin.ignore();
    библиотека.push_back(Книга(заглавие, автор, година));
    cout << "Книгата е добавена успешно!" << endl;
}

void покажиБиблиотека(const vector<Книга>& библиотека) {
    if (библиотека.empty()) {
        cout << "Библиотеката е празна." << endl;
    }
    else {
        for (const auto& книга : библиотека) {
            книга.покажиИнформация();
        }
    }
}

void търсиКнига(const vector<Книга>& библиотека, const string& заглавие) {
    bool намерена = false;
    for (const auto& книга : библиотека) {
        if (книга.заглавие == заглавие) {
            cout << "Намерена книга: ";
            книга.покажиИнформация();
            намерена = true;
            break;
        }
    }
    if (!намерена) {
        cout << "Книгата не е намерена." << endl;
    }
}

// Основна функция на приложението
int main() {
    system("chcp 1251 > nul"); // Осигурява правилно изобразяване на кирилица

    vector<Книга> библиотека;
    int избор;
    do {
        cout << "\nМеню:\n";
        cout << "1. Добави книга\n";
        cout << "2. Показване на библиотеката\n";
        cout << "3. Търсене на книга\n";
        cout << "4. Изход\n";
        cout << "Изберете опция: ";
        cin >> избор;
        cin.ignore(); // Игнорира новия ред след cin

        switch (избор) {
        case 1:
            добавиКнига(библиотека);
            break;
        case 2:
            покажиБиблиотека(библиотека);
            break;
        case 3: {
            string заглавие;
            cout << "Въведете заглавие за търсене: ";
            getline(cin, заглавие);
            търсиКнига(библиотека, заглавие);
            break;
        }
        case 4:
            cout << "Изход от програмата." << endl;
            break;
        default:
            cout << "Невалидна опция. Опитайте отново." << endl;
        }
    } while (избор != 4);

    return 0;
}
